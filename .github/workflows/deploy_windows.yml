name: Deploy_Windows

on:
  workflow_dispatch:

env:
    VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  deploy_windows_x86:
    name: windows deploy x86
    runs-on: windows-latest
    steps:
    - name: Checkout DGEngine
      uses: actions/checkout@v3

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install dependencies
      run: vcpkg install physfs sfml --triplet=x86-windows-static

    - name: Install UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        install-only: true

    - name: Setup MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x86

    - name: Setup Ninja Build
      uses: turtlesec-no/get-ninja@main

    - name: CMake build DGEngine
      run: |
        cmake --preset windows-x86-release-publish -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
        cmake --build --preset windows-x86-release-publish

    - name: Create DGEngine zip
      run: 7z a DGEngine-windows-x86.zip `
             ./out/build/windows-x86-release-publish/*.exe `
             ./out/build/windows-x86-release-publish/*.dll `
             LICENSE.* README.* main.json gamefiles*

    - name: Create DGEngine zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact-DGEngine-windows-x86
        path: DGEngine-windows-x86.zip

  deploy_windows_x64:
    name: windows deploy x64
    runs-on: windows-latest
    steps:
    - name: Checkout DGEngine
      uses: actions/checkout@v3

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install dependencies
      run: vcpkg install physfs sfml --triplet=x64-windows-static

    - name: Install UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        install-only: true

    - name: Setup MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Setup Ninja Build
      uses: turtlesec-no/get-ninja@main

    - name: CMake build DGEngine
      run: |
        cmake --preset windows-x64-release-publish -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
        cmake --build --preset windows-x64-release-publish

    - name: Create DGEngine zip
      run: 7z a DGEngine-windows-x64.zip `
             ./out/build/windows-x64-release-publish/*.exe `
             ./out/build/windows-x64-release-publish/*.dll `
             LICENSE.* README.* main.json gamefiles*

    - name: Create DGEngine zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact-DGEngine-windows-x64
        path: DGEngine-windows-x64.zip
