* Windows

To compile in Windows, you can use CMake or open the folder with Visual Studio 2022.

The easiest way to get the required dependencies is to use vcpkg.

Because SFML 2.6 is not yet released, you need to use a pre release version.
You can include it in vcpkg using a custom port for vcpkg.
https://github.com/dgcor/SFML/tree/feature/scancode

vcpkg install physfs sfml ffmpeg --overlay-ports=vcpkg/ports --triplet=x86-windows
vcpkg install physfs sfml ffmpeg --overlay-ports=vcpkg/ports --triplet=x86-windows-static
vcpkg install physfs sfml ffmpeg --overlay-ports=vcpkg/ports --triplet=x64-windows
vcpkg install physfs sfml ffmpeg --overlay-ports=vcpkg/ports --triplet=x64-windows-static

There is a custom vcpkg triplet that links ffmpeg dynamically.

vcpkg install physfs sfml ffmpeg --triplet=x86-windows-static --overlay-ports=vcpkg/ports --overlay-triplets=vcpkg/triplets
vcpkg install physfs sfml ffmpeg --triplet=x64-windows-static --overlay-ports=vcpkg/ports --overlay-triplets=vcpkg/triplets

/PhysicsFS - https://icculus.org/physfs
             version >= 2.1

/SFML - https://www.sfml-dev.org/
        SFML 2.6.0 (in development)
        https://github.com/dgcor/SFML/tree/feature/scancode

/FFmpeg - https://ffmpeg.zeranoe.com/builds/
          Get both shared and dev packages (version 3.x or 4.x)

If you want to skip movie playback support, use the preprocessor define
USE_SFML_MOVIE_STUB which uses a stub class that does nothing instead.

* Linux

To compile in Linux (Ubuntu), you need gcc or clang with C++20 support
and to have both PhysicsFS >= 2.1 and SFML >= 2.6 installed.

Because SFML 2.6 is not yet released, you need to use a pre release version.
You will have to install it manually from this branch:
https://github.com/dgcor/SFML/tree/feature/scancode

For Ubuntu, you can see which dependencies are required by analysing the CI build scripts
under .github\workflows\*.yml

sudo apt install libphysfs-dev
sudo apt install libsfml-dev        (skip this step until SFML 2.6 is released)

Optional (for movie support) FFmpeg:

sudo apt install libavdevice-dev libavformat-dev libavfilter-dev libavcodec-dev libswscale-dev libavutil-dev

Movie support is enabled by default (CMake), unless FFmpeg isn't found.
In CMake, set MOVIE_SUPPORT to FALSE to skip movie support.

* CMake

A CMake project file is provided. Movie support is enabled by default.
It will generate a project to compile on the target platform.

cmake CMakeLists.txt
cmake CMakeLists.txt -DMOVIE_SUPPORT:BOOL=FALSE

Both PhysicsFS and SFML must be installed.
FFmpeg is also required for movie support.

All the CMake properties and default values:

MOVIE_SUPPORT         (TRUE)  Enable Movie support
FALLBACK_TO_LOWERCASE (TRUE)  Enable falling back to all lowercase names if file is not found
