name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_linux:
    name: linux build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout DGEngine.core
      uses: actions/checkout@v3

    - name: Restore cached dependencies
      id: cache-linux-x64
      uses: actions/cache@v3
      with:
        path: /home/runner/work/sfml
        key: cache-linux-x64

    - name: Install dependencies
      run: |
        sudo apt install -yq --no-install-suggests --no-install-recommends libphysfs-dev > /dev/null
        sudo apt install -yq --no-install-suggests --no-install-recommends libalut-dev libflac-dev libgl1-mesa-dev libudev-dev libvorbis-dev libxcursor-dev libxrandr-dev > /dev/null
        sudo apt install -yq --no-install-suggests --no-install-recommends libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libswscale-dev > /dev/null

    - name: CMake + make SFML
      if: steps.cache-linux-x64.outputs.cache-hit != 'true'
      run: |
        git clone -q --depth=1 --branch=feature/scancode https://github.com/dgcor/SFML.git /home/runner/work/sfml > /dev/null
        git -C /home/runner/work/sfml pull > /dev/null
        cd /home/runner/work/sfml
        export CC=/usr/bin/gcc-11
        export CXX=/usr/bin/g++-11
        cmake /home/runner/work/sfml/CMakeLists.txt
        sudo make install

    - name: Install SFML
      if: steps.cache-linux-x64.outputs.cache-hit == 'true'
      run: |
        cd /home/runner/work/sfml
        sudo make install

    - name: Setup Ninja Build
      uses: turtlesec-no/get-ninja@main

    - name: CMake build DGEngine.core
      run: |
        export CC=/usr/bin/gcc-11
        export CXX=/usr/bin/g++-11
        cmake CMakeLists.txt -G "Ninja"
        cmake --build .

  build_windows:
    name: windows build
    runs-on: windows-2022
    steps:
    - name: Checkout DGEngine.core
      uses: actions/checkout@v3

    - name: Restore cached dependencies
      id: cache-windows-x64
      uses: actions/cache@v3
      with:
        path: C:/vcpkg/installed
        key: cache-windows-x64

    - name: Install dependencies
      if: steps.cache-windows-x64.outputs.cache-hit != 'true'
      run: vcpkg install physfs sfml --overlay-ports=vcpkg/ports --overlay-triplets=vcpkg/triplets --triplet=x64-windows

    - name: Setup MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Setup Ninja Build
      uses: turtlesec-no/get-ninja@main

    - name: CMake build DGEngine.core
      run: |
        cmake --preset windows-x64-release -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake
        cmake --build --preset windows-x64-release
