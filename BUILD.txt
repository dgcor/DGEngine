Windows

To compile in Windows, you need Visual Studio 2017, since this project
uses C++ features that are present only in VS2017.

The provided project expects the following folders in the root of the
project to build properly.

/PhysicsFS - https://icculus.org/physfs
             version >= 2.1
             Compile using MinSizeRel.

/SFML - http://www.sfml-dev.org/
        SFML 2.5.0

/FFmpeg - http://ffmpeg.zeranoe.com/builds/
          Get both 32 bit shared and dev packages (version 2.x or 3.x)

DGEngine now bundles a modified version of sfeMovie (no subtitle support,
FFmpeg 3.x API suport), so you only need FFmpeg >= 2.8 now.

If you want to skip movie playback support, use the preprocessor define
USE_SFML_MOVIE_STUB which uses a stub class that does nothing instead.
The provided project uses sfeMovie and will fail to compile if you don't have
sfeMovie with OpenFromStream support installed. Use this to fix that.

To prevent missing DLL errors when running from Visual Studio,
place the following in the root of the project:

avcodec-56.dll          (FFmpeg 2)
avdevice-56.dll         (FFmpeg 2)
avfilter-5.dll          (FFmpeg 2)
avformat-56.dll         (FFmpeg 2)
avutil-54.dll           (FFmpeg 2)
openal32.dll            (SFML)
physfs.dll              (PhysicsFS)
sfml-audio-2.dll        (SFML)
sfml-audio-d-2.dll      (SFML)
sfml-graphics-2.dll     (SFML)
sfml-graphics-d-2.dll   (SFML)
sfml-network-2.dll      (SFML)
sfml-network-d-2.dll    (SFML)
sfml-system-2.dll       (SFML)
sfml-system-d-2.dll     (SFML)
sfml-window-2.dll       (SFML)
sfml-window-d-2.dll     (SFML)
swresample-1.dll        (FFmpeg 2)
swscale-3.dll           (FFmpeg 2)

Linux

To compile in Linux (Ubuntu), you need gcc or clang with C++17 support
and to have both PhysicsFS >= 2.1 and SFML >= 2.5 installed.

sudo apt install libphysfs-dev
sudo apt install libsfml-dev

Optional (for movie support) FFmpeg:

sudo apt install libavdevice-dev libavformat-dev libavfilter-dev libavcodec-dev libswscale-dev libavutil-dev

Movie support is enabled by default (CMake), unless FFmpeg isn't found.
In CMake, set DGENGINE_MOVIE_SUPPORT to FALSE to skip movie support.

CMake

A CMake project file is provided. Movie support is enabled by default.
It will generate a project to compile on the target platform.

cmake CMakeLists.txt
cmake CMakeLists.txt -DDGENGINE_MOVIE_SUPPORT:BOOL=FALSE

Both PhysicsFS and SFML must be installed.
FFmpeg is also required for movie support.

Clang variant bug

There's a bug in clang which affects libstdc++'s <variant>.
If you get errors with clang, use -stdlib=libc++ instead.
